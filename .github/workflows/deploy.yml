name: Deploy to GitHub Pages

# This workflow handles deployment to GitHub Pages
# - On push to main: Run full test suite + deploy
# - On PR to main: Only build (validation is handled by validate.yml)
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        if: github.event_name == 'push'
        run: npx playwright install --with-deps chromium firefox

      - name: Run Tests & Validation
        if: github.event_name == 'push'
        run: |
          # Ensure code quality before deployment
          npm run format:check
          npm run lint
          npm run test:run

      - name: Run E2E Tests
        if: github.event_name == 'push'
        run: |
          echo "Running E2E tests before production deployment..."
          npm run test:e2e:ci
          echo "âœ“ E2E tests passed - safe to deploy"

      - name: Build
        run: npm run build

      - name: Upload E2E Test Report (Deploy)
        uses: actions/upload-artifact@v4
        if: always() && github.event_name == 'push'
        with:
          name: playwright-report-deploy
          path: playwright-report/
          retention-days: 30

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
